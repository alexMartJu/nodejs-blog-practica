name: nodejs-blog-practica

on:
  push:
    branches:
      - main

jobs:
  linter_job:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Descargar el código del repositorio en la máquina virtual para que los siguientes pasos puedan trabajar con él.
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 2: Configurar Node.js en la máquina virtual, usando la versión 16. Esto asegura que el entorno esté listo para ejecutar aplicaciones Node.js.
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Paso 3: Instalar las dependencias definidas en el archivo "package.json". Esto asegura que las bibliotecas necesarias para el proyecto estén disponibles.
      - name: Install dependencies
        run: npm install

      # Paso 4: Ejecutar el linter para verificar la sintaxis y el estilo del código.
      - name: Run Linter
        run: npm run lint

  cypress_job:
    needs: linter_job
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Descargar el código fuente del repositorio en la máquina virtual.
      - name: Checkout code
        uses: actions/checkout@v4

      # Paso 2: Instalar las dependencias del proyecto definidas en el archivo "package.json".
      - name: Install dependencies
        run: npm install

      # Paso 3: Paso adicional para construir la aplicación Next.js.
      - name: Build the Next.js application
        run: npm run build

      # Paso 4: Arrancar el servidor para que Cypress pueda realizar los tests.
      - name: Start the server
        run: npm run start &
        # Usamos el `&` para que el servidor se ejecute en segundo plano, permitiendo que los siguientes pasos continúen ejecutándose.

      # Paso 5: Ejecutar los tests de Cypress manualmente con el comando npm run cypress.
      - name: Run Cypress tests manually
        run: npm run cypress
        continue-on-error: true # Esto sigue permitiendo que el job continúe incluso si Cypress falla.

      # Paso 6: Guardar los resultados de las pruebas de Cypress en un archivo `result.txt`.
      - name: Save Cypress test results
        run: |
          # Capturar el código de salida del paso anterior (Cypress)
          CYPRESS_EXIT_CODE=$?

          # Verificar si Cypress pasó o falló
          if [ $CYPRESS_EXIT_CODE -eq 0 ]; then
            echo "success" > result.txt
          else
            echo "failure" > result.txt
            echo "Cypress tests failed with exit code $CYPRESS_EXIT_CODE"
            # Copiar los videos de pruebas fallidas (si existen)
            cp cypress/videos/**/*.mp4 . || true
          fi

          # Mostrar el contenido de result.txt
          cat result.txt

      # Paso 7: Subir el archivo `result.txt` como artefacto llamado "cypress-results".
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cypress-results
          path: result.txt