name: nodejs-blog-practica

on:
  push:
    branches:
      - main

jobs:
  linter_job:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Descargar el código del repositorio en la máquina virtual para que los siguientes pasos puedan trabajar con él.
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 2: Configurar Node.js en la máquina virtual, usando la versión 16. Esto asegura que el entorno esté listo para ejecutar aplicaciones Node.js.
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Paso 3: Instalar las dependencias definidas en el archivo "package.json". Esto asegura que las bibliotecas necesarias para el proyecto estén disponibles.
      - name: Install dependencies
        run: npm install

      # Paso 4: Ejecutar el linter para verificar la sintaxis y el estilo del código.
      - name: Run Linter
        run: npm run lint

  cypress_job:
    # Indica que este job depende de que termine linter_job
    needs: linter_job
    runs-on: ubuntu-latest

    steps:
      # Descarga el contenido del repositorio en la máquina virtual
      - name: Checkout repository
        uses: actions/checkout@v4

      # Instala las dependencias definidas en package.json
      - name: Install dependencies
        run: npm install

      # Construimos la app Next antes de arrancarla
      - name: Build Next app
        run: npm run build

      # Arranca el servidor en 2º plano
      - name: Start Next server
        run: |
          npm run start &
          echo "Server started in background"

      # Espera hasta que localhost:3000 esté listo (usando curl)
      - name: Wait for server
        run: |
          until curl --silent --head --fail http://localhost:3000; do
            echo "Waiting for server to be available..."
            sleep 5
          done
          echo "Server is ready!"

      # Ejecuta los tests de Cypress, guarda exit code en cypress_exitcode.txt
      - name: Run Cypress
        id: run_cypress
        continue-on-error: true
        run: |
          # Desactiva 'exit on error' en Bash para que si Cypress falla, este script continúe
          set +e
          npx cypress run
          EXIT_CODE=$?
          set -e

          echo "Cypress exit code was: $EXIT_CODE"
          echo "$EXIT_CODE" > cypress_exitcode.txt
          ls -l
          cat cypress_exitcode.txt

      # Lee el exit code y crea result.txt con "success" o "failure"
      - name: Evaluate Cypress results
        run: |
          exit_code=$(cat cypress_exitcode.txt)

          if [ "$exit_code" -eq 0 ]; then
            echo "success" > result.txt
          else
            echo "failure" > result.txt
          fi

          echo "Contenido de result.txt:"
          cat result.txt

      # Sube el archivo result.txt como artefacto
      - name: Upload Cypress results
        uses: actions/upload-artifact@v4
        with:
          name: cypress-result
          path: result.txt